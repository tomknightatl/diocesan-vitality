# Pre-commit hooks configuration
# Matches CI pipeline tests from .github/workflows/multi-cluster-ci-cd.yml

repos:
  # Python code quality - Flake8
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args:
          - --max-line-length=127
          - --extend-ignore=E203,W503
        exclude: ^(venv/|node_modules/|\.git/)

  # Python code formatting - Black (commented out to match CI pipeline)
  # - repo: https://github.com/psf/black
  #   rev: 24.2.0
  #   hooks:
  #     - id: black
  #       args:
  #         - --line-length=127
  #       exclude: ^(venv/|node_modules/|\.git/)

  # Python import sorting - isort (commented out to match CI pipeline)
  # - repo: https://github.com/pycqa/isort
  #   rev: 5.13.2
  #   hooks:
  #     - id: isort
  #       args:
  #         - --profile=black
  #         - --line-length=127
  #       exclude: ^(venv/|node_modules/|\.git/)

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(venv/|node_modules/|\.git/)
      - id: end-of-file-fixer
        exclude: ^(venv/|node_modules/|\.git/)
      - id: check-yaml
        exclude: ^(venv/|node_modules/|\.git/|k8s/.*\.yaml$)
      - id: check-added-large-files
        args: ["--maxkb=1000"]
      - id: check-merge-conflict
      - id: detect-private-key

  # Frontend linting - ESLint (using system installation)
  - repo: local
    hooks:
      - id: eslint
        name: eslint
        entry: bash -c 'cd frontend && npm run lint'
        language: system
        files: \.(js|jsx|ts|tsx)$
        pass_filenames: false
