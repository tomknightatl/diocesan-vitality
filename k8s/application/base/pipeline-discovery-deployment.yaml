apiVersion: apps/v1
kind: Deployment
metadata:
  name: pipeline-discovery-deployment
spec:
  replicas: 1 # Discovery is lightweight, usually 1 is enough
  revisionHistoryLimit: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: pipeline-discovery
      worker-type: discovery
  template:
    metadata:
      labels:
        app: pipeline-discovery
        worker-type: discovery
    spec:
      serviceAccountName: default
      nodeSelector:
        doks.digitalocean.com/node-pool: slow-pool # Discovery is lightweight
      containers:
        - name: pipeline
          image: tomatl/diocesan-vitality:pipeline
          imagePullPolicy: Always
          resources:
            requests:
              memory: "512Mi" # Lightweight - just API calls
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          env:
            # Database configuration
            - name: SUPABASE_URL
              valueFrom:
                secretKeyRef:
                  name: diocesan-vitality-secrets
                  key: supabase-url
            - name: SUPABASE_KEY
              valueFrom:
                secretKeyRef:
                  name: diocesan-vitality-secrets
                  key: supabase-key
            # AI and search API keys
            - name: GENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: diocesan-vitality-secrets
                  key: genai-api-key
            - name: SEARCH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: diocesan-vitality-secrets
                  key: search-api-key
            - name: SEARCH_CX
              valueFrom:
                secretKeyRef:
                  name: diocesan-vitality-secrets
                  key: search-cx
            # Environment configuration
            - name: HOME
              value: "/tmp"
            - name: WDM_LOCAL_CACHE
              value: "/tmp/webdriver-cache"
            # Worker identification
            - name: WORKER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            # Worker type specification
            - name: WORKER_TYPE
              value: "discovery"
            # Pipeline configuration
            - name: MONITORING_URL
              value: "http://backend-service:8000"
          # Use distributed pipeline runner with discovery worker type
          command: ["python", "-m", "pipeline.distributed_pipeline_runner"]
          args:
            - "--worker_type"
            - "discovery"
            - "--monitoring_url"
            - "$(MONITORING_URL)"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          livenessProbe:
            exec:
              command:
                - python
                - -c
                - |
                  import sys
                  import os
                  sys.path.append(os.getcwd())
                  from core.distributed_work_coordinator import DistributedWorkCoordinator
                  coordinator = DistributedWorkCoordinator()
                  print("healthy")
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - python
                - -c
                - |
                  import sys
                  import os
                  sys.path.append(os.getcwd())
                  from core.db import get_supabase_client
                  supabase = get_supabase_client()
                  if supabase:
                      print("ready")
                  else:
                      exit(1)
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 2
      volumes:
        - name: tmp
          emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
