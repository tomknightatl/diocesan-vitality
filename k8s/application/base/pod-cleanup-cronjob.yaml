apiVersion: batch/v1
kind: CronJob
metadata:
  name: pod-cleanup
spec:
  schedule: "*/30 * * * *" # Run every 30 minutes
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 300 # Clean up completed jobs after 5 minutes
      template:
        spec:
          serviceAccountName: pod-cleanup
          restartPolicy: OnFailure
          containers:
            - name: kubectl
              image: bitnami/kubectl:latest
              command:
                - /bin/sh
                - -c
                - |
                  echo "ðŸ§¹ Cleaning up evicted and failed pods..."
                  kubectl delete pods --field-selector status.phase=Failed --all-namespaces --ignore-not-found=true
                  echo "âœ… Cleanup complete"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pod-cleanup
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-cleanup
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-cleanup
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-cleanup
subjects:
  - kind: ServiceAccount
    name: pod-cleanup
    namespace: diocesan-vitality-dev
