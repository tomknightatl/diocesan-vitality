

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";






CREATE TYPE "public"."fact_type_enum" AS ENUM (
    'ReconciliationSchedule',
    'AdorationSchedule'
);


ALTER TYPE "public"."fact_type_enum" OWNER TO "postgres";


CREATE OR REPLACE FUNCTION "public"."update_updated_at_column"() RETURNS "trigger"
    LANGUAGE "plpgsql"
    AS $$
BEGIN
    NEW.updated_at = now();
    RETURN NEW;
END;
$$;


ALTER FUNCTION "public"."update_updated_at_column"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."ScheduleKeywords" (
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"(),
    "updated_at" timestamp with time zone DEFAULT "now"(),
    "keyword" "text" NOT NULL,
    "schedule_type" "text" NOT NULL,
    "weight" integer DEFAULT 1 NOT NULL,
    "is_negative" boolean DEFAULT false,
    "is_active" boolean DEFAULT true,
    "description" "text",
    "examples" "text",
    CONSTRAINT "ScheduleKeywords_schedule_type_check" CHECK (("schedule_type" = ANY (ARRAY['reconciliation'::"text", 'adoration'::"text", 'both'::"text"])))
);


ALTER TABLE "public"."ScheduleKeywords" OWNER TO "postgres";


CREATE OR REPLACE VIEW "public"."ActiveScheduleKeywords" AS
 SELECT "ScheduleKeywords"."id",
    "ScheduleKeywords"."keyword",
    "ScheduleKeywords"."schedule_type",
    "ScheduleKeywords"."weight",
    "ScheduleKeywords"."is_negative",
    "ScheduleKeywords"."description",
    "ScheduleKeywords"."created_at",
    "ScheduleKeywords"."updated_at"
   FROM "public"."ScheduleKeywords"
  WHERE ("ScheduleKeywords"."is_active" = true)
  ORDER BY "ScheduleKeywords"."schedule_type", "ScheduleKeywords"."weight" DESC, "ScheduleKeywords"."keyword";


ALTER TABLE "public"."ActiveScheduleKeywords" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."Dioceses" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "Name" character varying,
    "Address" character varying,
    "Website" character varying,
    "extracted_at" character varying
);


ALTER TABLE "public"."Dioceses" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."DiocesesParishDirectory" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "diocese_url" character varying,
    "parish_directory_url" character varying,
    "found" character varying,
    "found_method" character varying,
    "updated_at" character varying,
    "diocese_id" integer
);


ALTER TABLE "public"."DiocesesParishDirectory" OWNER TO "postgres";


ALTER TABLE "public"."DiocesesParishDirectory" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."DiocesesParishDirectory_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."Dioceses" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Dioceses_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."DiscoveredUrls" (
    "id" bigint NOT NULL,
    "parish_id" bigint,
    "url" "text" NOT NULL,
    "score" integer NOT NULL,
    "source_url" "text",
    "visited" boolean DEFAULT false,
    "created_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."DiscoveredUrls" OWNER TO "postgres";


ALTER TABLE "public"."DiscoveredUrls" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."DiscoveredUrls_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."ParishData" (
    "id" bigint NOT NULL,
    "parish_id" bigint NOT NULL,
    "fact_type" "public"."fact_type_enum" NOT NULL,
    "fact_value" "text",
    "fact_source_url" "text",
    "created_at" timestamp with time zone DEFAULT "now"(),
    "updated_at" timestamp with time zone DEFAULT "now"(),
    "fact_string" "text",
    "confidence_score" integer DEFAULT 0,
    "extraction_method" "text" DEFAULT 'keyword_based'::"text",
    "ai_structured_data" "jsonb"
);


ALTER TABLE "public"."ParishData" OWNER TO "postgres";


COMMENT ON COLUMN "public"."ParishData"."confidence_score" IS 'AI confidence score (0-100) for extracted information';



COMMENT ON COLUMN "public"."ParishData"."extraction_method" IS 'Method used: keyword_based, ai_gemini, manual, etc.';



COMMENT ON COLUMN "public"."ParishData"."ai_structured_data" IS 'JSON structure with detailed AI extraction results';



CREATE TABLE IF NOT EXISTS "public"."Parishes" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "Name" character varying,
    "Status" character varying,
    "Deanery" character varying,
    "Street Address" character varying,
    "City" character varying,
    "State" character varying,
    "Zip Code" character varying,
    "Phone Number" character varying,
    "Web" character varying,
    "diocese_url" character varying,
    "parish_directory_url" character varying,
    "extraction_method" character varying,
    "confidence_score" real,
    "extracted_at" character varying,
    "parish_detail_url" "text",
    "full_address" "text",
    "clergy_info" "text",
    "service_times" "text",
    "detail_extraction_success" boolean,
    "detail_extraction_error" "text",
    "latitude" double precision,
    "longitude" double precision,
    "diocese_id" bigint
);


ALTER TABLE "public"."Parishes" OWNER TO "postgres";


CREATE OR REPLACE VIEW "public"."HighQualitySchedules" AS
 SELECT "pd"."id",
    "pd"."parish_id",
    "pd"."fact_type",
    "pd"."fact_value",
    "pd"."fact_source_url",
    "pd"."confidence_score",
    "pd"."extraction_method",
    "pd"."ai_structured_data",
    "pd"."created_at",
    "p"."Name" AS "parish_name",
    "p"."Web" AS "parish_website"
   FROM ("public"."ParishData" "pd"
     LEFT JOIN "public"."Parishes" "p" ON (("pd"."parish_id" = "p"."id")))
  WHERE (("pd"."extraction_method" = 'ai_gemini'::"text") AND ("pd"."confidence_score" >= 70) AND ("pd"."fact_type" = ANY (ARRAY['AdorationSchedule'::"public"."fact_type_enum", 'ReconciliationSchedule'::"public"."fact_type_enum"])))
  ORDER BY "pd"."confidence_score" DESC, "pd"."created_at" DESC;


ALTER TABLE "public"."HighQualitySchedules" OWNER TO "postgres";


COMMENT ON VIEW "public"."HighQualitySchedules" IS 'High-confidence AI-extracted schedule information for parishes';



ALTER TABLE "public"."ParishData" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ParishData_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE OR REPLACE VIEW "public"."ParishScheduleSummary" AS
 SELECT "p"."id" AS "parish_id",
    "p"."Name" AS "parish_name",
    "p"."Web" AS "parish_website",
    "p"."diocese_id",
    "bool_or"(
        CASE
            WHEN ((("pd"."fact_type")::"text" ~~ '%Adoration%'::"text") AND ("pd"."extraction_method" = 'ai_gemini'::"text") AND ("pd"."confidence_score" >= 70)) THEN (("pd"."ai_structured_data" ->> 'has_weekly_schedule'::"text"))::boolean
            WHEN ((("pd"."fact_type")::"text" ~~ '%Adoration%'::"text") AND ("pd"."extraction_method" <> 'ai_gemini'::"text")) THEN (("pd"."fact_value" IS NOT NULL) AND ("pd"."fact_value" <> 'Information not found'::"text"))
            ELSE false
        END) AS "has_weekly_adoration",
    "max"(
        CASE
            WHEN ((("pd"."fact_type")::"text" ~~ '%Adoration%'::"text") AND ("pd"."extraction_method" = 'ai_gemini'::"text")) THEN "pd"."confidence_score"
            WHEN ((("pd"."fact_type")::"text" ~~ '%Adoration%'::"text") AND ("pd"."extraction_method" <> 'ai_gemini'::"text")) THEN 50
            ELSE NULL::integer
        END) AS "adoration_confidence",
    "max"(
        CASE
            WHEN ((("pd"."fact_type")::"text" ~~ '%Adoration%'::"text") AND ("pd"."extraction_method" = 'ai_gemini'::"text")) THEN ("pd"."ai_structured_data" ->> 'frequency'::"text")
            ELSE 'unknown'::"text"
        END) AS "adoration_frequency",
    "bool_or"(
        CASE
            WHEN ((("pd"."fact_type")::"text" ~~ '%Reconciliation%'::"text") AND ("pd"."extraction_method" = 'ai_gemini'::"text") AND ("pd"."confidence_score" >= 70)) THEN (("pd"."ai_structured_data" ->> 'has_weekly_schedule'::"text"))::boolean
            WHEN ((("pd"."fact_type")::"text" ~~ '%Reconciliation%'::"text") AND ("pd"."extraction_method" <> 'ai_gemini'::"text")) THEN (("pd"."fact_value" IS NOT NULL) AND ("pd"."fact_value" <> 'Information not found'::"text"))
            ELSE false
        END) AS "has_weekly_reconciliation",
    "max"(
        CASE
            WHEN ((("pd"."fact_type")::"text" ~~ '%Reconciliation%'::"text") AND ("pd"."extraction_method" = 'ai_gemini'::"text")) THEN "pd"."confidence_score"
            WHEN ((("pd"."fact_type")::"text" ~~ '%Reconciliation%'::"text") AND ("pd"."extraction_method" <> 'ai_gemini'::"text")) THEN 50
            ELSE NULL::integer
        END) AS "reconciliation_confidence",
    "max"(
        CASE
            WHEN ((("pd"."fact_type")::"text" ~~ '%Reconciliation%'::"text") AND ("pd"."extraction_method" = 'ai_gemini'::"text")) THEN ("pd"."ai_structured_data" ->> 'frequency'::"text")
            ELSE 'unknown'::"text"
        END) AS "reconciliation_frequency",
    "count"(
        CASE
            WHEN ("pd"."extraction_method" = 'ai_gemini'::"text") THEN 1
            ELSE NULL::integer
        END) AS "ai_extractions",
    "count"(
        CASE
            WHEN ("pd"."extraction_method" <> 'ai_gemini'::"text") THEN 1
            ELSE NULL::integer
        END) AS "keyword_extractions",
    "max"("pd"."created_at") AS "last_updated"
   FROM ("public"."Parishes" "p"
     LEFT JOIN "public"."ParishData" "pd" ON (("p"."id" = "pd"."parish_id")))
  WHERE ("pd"."fact_type" = ANY (ARRAY['AdorationSchedule'::"public"."fact_type_enum", 'ReconciliationSchedule'::"public"."fact_type_enum"]))
  GROUP BY "p"."id", "p"."Name", "p"."Web", "p"."diocese_id"
  ORDER BY ("count"(
        CASE
            WHEN ("pd"."extraction_method" = 'ai_gemini'::"text") THEN 1
            ELSE NULL::integer
        END)) DESC, ("max"("pd"."created_at")) DESC;


ALTER TABLE "public"."ParishScheduleSummary" OWNER TO "postgres";


COMMENT ON VIEW "public"."ParishScheduleSummary" IS 'Summary view showing schedule availability for all parishes';



CREATE TABLE IF NOT EXISTS "public"."expected_parishes_2002" (
    "id" integer NOT NULL,
    "diocese_id" integer NOT NULL,
    "parish_name" "text" NOT NULL,
    "city" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."expected_parishes_2002" OWNER TO "postgres";


CREATE SEQUENCE IF NOT EXISTS "public"."expected_parishes_2002_id_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "public"."expected_parishes_2002_id_seq" OWNER TO "postgres";


ALTER SEQUENCE "public"."expected_parishes_2002_id_seq" OWNED BY "public"."expected_parishes_2002"."id";



ALTER TABLE "public"."Parishes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."parishes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."parishfactssuppressionurls" (
    "id" bigint NOT NULL,
    "url" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL
);


ALTER TABLE "public"."parishfactssuppressionurls" OWNER TO "postgres";


CREATE SEQUENCE IF NOT EXISTS "public"."parishfactssuppressionurls_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "public"."parishfactssuppressionurls_id_seq" OWNER TO "postgres";


ALTER SEQUENCE "public"."parishfactssuppressionurls_id_seq" OWNED BY "public"."parishfactssuppressionurls"."id";



CREATE TABLE IF NOT EXISTS "public"."test_parishes_expected_2009" (
    "id" integer NOT NULL,
    "name" "text" NOT NULL,
    "address" "text" NOT NULL,
    "city" "text" NOT NULL,
    "state" "text" NOT NULL,
    "zip_code" "text" NOT NULL,
    "diocese_id" integer DEFAULT 2009,
    "created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE "public"."test_parishes_expected_2009" OWNER TO "postgres";


CREATE SEQUENCE IF NOT EXISTS "public"."test_parishes_expected_2009_id_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE "public"."test_parishes_expected_2009_id_seq" OWNER TO "postgres";


ALTER SEQUENCE "public"."test_parishes_expected_2009_id_seq" OWNED BY "public"."test_parishes_expected_2009"."id";



ALTER TABLE ONLY "public"."expected_parishes_2002" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."expected_parishes_2002_id_seq"'::"regclass");



ALTER TABLE ONLY "public"."parishfactssuppressionurls" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."parishfactssuppressionurls_id_seq"'::"regclass");



ALTER TABLE ONLY "public"."test_parishes_expected_2009" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."test_parishes_expected_2009_id_seq"'::"regclass");



ALTER TABLE ONLY "public"."DiocesesParishDirectory"
    ADD CONSTRAINT "DiocesesParishDirectory_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."Dioceses"
    ADD CONSTRAINT "Dioceses_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."DiscoveredUrls"
    ADD CONSTRAINT "DiscoveredUrls_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."DiscoveredUrls"
    ADD CONSTRAINT "DiscoveredUrls_url_parish_id_unique" UNIQUE ("url", "parish_id");



ALTER TABLE ONLY "public"."ParishData"
    ADD CONSTRAINT "ParishData_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."ScheduleKeywords"
    ADD CONSTRAINT "ScheduleKeywords_keyword_schedule_type_key" UNIQUE ("keyword", "schedule_type");



ALTER TABLE ONLY "public"."ScheduleKeywords"
    ADD CONSTRAINT "ScheduleKeywords_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."expected_parishes_2002"
    ADD CONSTRAINT "expected_parishes_2002_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."ParishData"
    ADD CONSTRAINT "parishdata_parish_id_fact_type_unique" UNIQUE ("parish_id", "fact_type");



ALTER TABLE ONLY "public"."Parishes"
    ADD CONSTRAINT "parishes_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."parishfactssuppressionurls"
    ADD CONSTRAINT "parishfactssuppressionurls_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."parishfactssuppressionurls"
    ADD CONSTRAINT "parishfactssuppressionurls_url_key" UNIQUE ("url");



ALTER TABLE ONLY "public"."test_parishes_expected_2009"
    ADD CONSTRAINT "test_parishes_expected_2009_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."DiocesesParishDirectory"
    ADD CONSTRAINT "unique_diocese_id" UNIQUE ("diocese_id");



ALTER TABLE ONLY "public"."Dioceses"
    ADD CONSTRAINT "unique_diocese_name" UNIQUE ("Name");



ALTER TABLE ONLY "public"."Parishes"
    ADD CONSTRAINT "unique_parish_per_diocese_name" UNIQUE ("diocese_id", "Name");



ALTER TABLE ONLY "public"."Parishes"
    ADD CONSTRAINT "unique_parish_per_diocese_web" UNIQUE ("diocese_id", "Web");



CREATE INDEX "idx_discoveredurls_parish_id" ON "public"."DiscoveredUrls" USING "btree" ("parish_id");



CREATE INDEX "idx_expected_parishes_2002_diocese_id" ON "public"."expected_parishes_2002" USING "btree" ("diocese_id");



CREATE INDEX "idx_parish_data_ai_structured_data" ON "public"."ParishData" USING "gin" ("ai_structured_data");



CREATE INDEX "idx_parish_data_confidence" ON "public"."ParishData" USING "btree" ("confidence_score");



CREATE INDEX "idx_parish_data_extraction_method" ON "public"."ParishData" USING "btree" ("extraction_method");



CREATE INDEX "idx_parishes_confidence_score" ON "public"."Parishes" USING "btree" ("confidence_score");



CREATE INDEX "idx_parishes_detail_success" ON "public"."Parishes" USING "btree" ("detail_extraction_success");



CREATE INDEX "idx_parishes_extracted_at" ON "public"."Parishes" USING "btree" ("extracted_at");



CREATE INDEX "idx_parishes_extraction_method" ON "public"."Parishes" USING "btree" ("extraction_method");



CREATE INDEX "idx_schedule_keywords_active" ON "public"."ScheduleKeywords" USING "btree" ("is_active");



CREATE INDEX "idx_schedule_keywords_type" ON "public"."ScheduleKeywords" USING "btree" ("schedule_type");



CREATE INDEX "idx_schedule_keywords_weight" ON "public"."ScheduleKeywords" USING "btree" ("weight" DESC);



CREATE OR REPLACE TRIGGER "update_parishdata_updated_at" BEFORE UPDATE ON "public"."ParishData" FOR EACH ROW EXECUTE FUNCTION "public"."update_updated_at_column"();



CREATE OR REPLACE TRIGGER "update_parishfactssuppressionurls_updated_at" BEFORE UPDATE ON "public"."parishfactssuppressionurls" FOR EACH ROW EXECUTE FUNCTION "public"."update_updated_at_column"();



CREATE OR REPLACE TRIGGER "update_schedule_keywords_updated_at" BEFORE UPDATE ON "public"."ScheduleKeywords" FOR EACH ROW EXECUTE FUNCTION "public"."update_updated_at_column"();



ALTER TABLE ONLY "public"."DiscoveredUrls"
    ADD CONSTRAINT "DiscoveredUrls_parish_id_fkey" FOREIGN KEY ("parish_id") REFERENCES "public"."Parishes"("id");



ALTER TABLE ONLY "public"."ParishData"
    ADD CONSTRAINT "ParishData_parish_id_fkey" FOREIGN KEY ("parish_id") REFERENCES "public"."Parishes"("id");



CREATE POLICY "Allow notebook access" ON "public"."Dioceses" TO "anon" USING (true) WITH CHECK (true);



CREATE POLICY "Allow notebook access" ON "public"."DiocesesParishDirectory" USING (true) WITH CHECK (true);



CREATE POLICY "Allow notebook access" ON "public"."Parishes" USING (true) WITH CHECK (true);



ALTER TABLE "public"."Dioceses" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."DiocesesParishDirectory" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "Enable all operations for authenticated users" ON "public"."ScheduleKeywords" TO "authenticated" USING (true) WITH CHECK (true);



CREATE POLICY "Enable read access for anonymous users" ON "public"."ScheduleKeywords" FOR SELECT TO "anon" USING (true);



ALTER TABLE "public"."Parishes" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."ScheduleKeywords" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

























































































































































GRANT ALL ON FUNCTION "public"."update_updated_at_column"() TO "anon";
GRANT ALL ON FUNCTION "public"."update_updated_at_column"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."update_updated_at_column"() TO "service_role";


















GRANT ALL ON TABLE "public"."ScheduleKeywords" TO "anon";
GRANT ALL ON TABLE "public"."ScheduleKeywords" TO "authenticated";
GRANT ALL ON TABLE "public"."ScheduleKeywords" TO "service_role";



GRANT ALL ON TABLE "public"."ActiveScheduleKeywords" TO "anon";
GRANT ALL ON TABLE "public"."ActiveScheduleKeywords" TO "authenticated";
GRANT ALL ON TABLE "public"."ActiveScheduleKeywords" TO "service_role";



GRANT ALL ON TABLE "public"."Dioceses" TO "anon";
GRANT ALL ON TABLE "public"."Dioceses" TO "authenticated";
GRANT ALL ON TABLE "public"."Dioceses" TO "service_role";



GRANT ALL ON TABLE "public"."DiocesesParishDirectory" TO "anon";
GRANT ALL ON TABLE "public"."DiocesesParishDirectory" TO "authenticated";
GRANT ALL ON TABLE "public"."DiocesesParishDirectory" TO "service_role";



GRANT ALL ON SEQUENCE "public"."DiocesesParishDirectory_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."DiocesesParishDirectory_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."DiocesesParishDirectory_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."Dioceses_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Dioceses_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Dioceses_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."DiscoveredUrls" TO "anon";
GRANT ALL ON TABLE "public"."DiscoveredUrls" TO "authenticated";
GRANT ALL ON TABLE "public"."DiscoveredUrls" TO "service_role";



GRANT ALL ON SEQUENCE "public"."DiscoveredUrls_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."DiscoveredUrls_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."DiscoveredUrls_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."ParishData" TO "anon";
GRANT ALL ON TABLE "public"."ParishData" TO "authenticated";
GRANT ALL ON TABLE "public"."ParishData" TO "service_role";



GRANT ALL ON TABLE "public"."Parishes" TO "anon";
GRANT ALL ON TABLE "public"."Parishes" TO "authenticated";
GRANT ALL ON TABLE "public"."Parishes" TO "service_role";



GRANT ALL ON TABLE "public"."HighQualitySchedules" TO "anon";
GRANT ALL ON TABLE "public"."HighQualitySchedules" TO "authenticated";
GRANT ALL ON TABLE "public"."HighQualitySchedules" TO "service_role";



GRANT ALL ON SEQUENCE "public"."ParishData_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ParishData_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ParishData_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."ParishScheduleSummary" TO "anon";
GRANT ALL ON TABLE "public"."ParishScheduleSummary" TO "authenticated";
GRANT ALL ON TABLE "public"."ParishScheduleSummary" TO "service_role";



GRANT ALL ON TABLE "public"."expected_parishes_2002" TO "anon";
GRANT ALL ON TABLE "public"."expected_parishes_2002" TO "authenticated";
GRANT ALL ON TABLE "public"."expected_parishes_2002" TO "service_role";



GRANT ALL ON SEQUENCE "public"."expected_parishes_2002_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."expected_parishes_2002_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."expected_parishes_2002_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."parishes_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."parishes_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."parishes_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."parishfactssuppressionurls" TO "anon";
GRANT ALL ON TABLE "public"."parishfactssuppressionurls" TO "authenticated";
GRANT ALL ON TABLE "public"."parishfactssuppressionurls" TO "service_role";



GRANT ALL ON SEQUENCE "public"."parishfactssuppressionurls_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."parishfactssuppressionurls_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."parishfactssuppressionurls_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."test_parishes_expected_2009" TO "anon";
GRANT ALL ON TABLE "public"."test_parishes_expected_2009" TO "authenticated";
GRANT ALL ON TABLE "public"."test_parishes_expected_2009" TO "service_role";



GRANT ALL ON SEQUENCE "public"."test_parishes_expected_2009_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."test_parishes_expected_2009_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."test_parishes_expected_2009_id_seq" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
